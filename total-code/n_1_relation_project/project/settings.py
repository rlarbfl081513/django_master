"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l(%^n9t$!tj=!r)gc4s^r2_x$si8u*d=s_4=p1+p^*du-y7%$='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 생성한 앱 이름 추가하기기
    'accounts',
    'articles',
    'django_extensions',
    'django.contrib.admin',
    # 장고가 기본적으로 User모델을 포함한 auth관련 테이블을 가지고 있음 
    # UserCreationForm은 그 auth_user 테이블에 사용자 데이터를 저장하려고함 
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

# 장고는 템플릿을 렌더링할때 내부적으로 
# '템플릿 파일 어디서 찾지??' --> settings.py에서 TEMPLATES 설정을 확인 
# 앱안의 템플릿은 자동으로 찾아서 'lifelog_app/templates/lifelog_app/base.html'이런구조는 알아서 인식하지만
# 전체 프로젝ㅌ의 템플릿은 자동 인식 안됨 --> 그래서 DIRS로 명시해줘야함 
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 장고가 어디에서 템플릿을 찾을지 알려주는 역할 
        'DIRS': [BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/



##-----------------------------여기부터 추가한 코드

## 이미지 경로
# 브라우저에서 정적 파일을 요청하 때 url경로 / 예)<img src="/static/logo.png">
STATIC_URL = 'static/'

# 그런데 /static/logo.png를 실제로 어디서 읽어올지는 장고가 따로 알아야함, 그걸 알려주는게 아래의 코드임
# 임의의 추가 경로 설정하기
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
    # STATIC_URL : 브라우저가 요청할 경로 (url 주소)
    # STATICFILES_DIRS : 실제 정적 파일들이 저장된 로컬 경로
        # STATICFILES_DIRS 설정을 안하면
        # 장고는 app/static 폴더만 자동 인식
        # 프러젝트 루트/static은 몰라
        # 그래서 따로 설정해서 장고가 프로젝트루트/static도 정적 파일로 인식하게 하는 거임



## 이미지 업로드를 위한 코드
# 미디어 파일들이 위치하는 디렉토리의 절대 경로
MEDIA_ROOT = BASE_DIR / 'media'
# 미디어루트에서 제공되는 미디어 파일에 대한 주소를 생성 (STATIC_URL과 동일한 역할)
MEDIA_URL = 'media/'


##-----------------------------여기까지가 추가한 코드


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 회원가입 폼을 커스텀해서 추가하는 코드
# AUTH_USER_MODEL = 'accounts.CustomUser'